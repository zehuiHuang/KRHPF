application.topic=estate-workers
#kafka.consumer.zookeeper.connect=localhost:2181
#多个服务器的集群用逗号分开
kafka.consumer.servers=localhost:9092
kafka.consumer.enable.auto.commit=true 
kafka.consumer.session.timeout=6000 
kafka.consumer.auto.commit.interval=100
kafka.consumer.auto.offset.reset=latest 
#kafka.consumer.topic=estate-workers
kafka.consumer.group.id=workers
kafka.consumer.concurrency=10
kafka.producer.servers=localhost:9092 
#发生错误时，重传次数。当开启重传时，需要将`max.in.flight.requests.per.connection`设置为1，否则可能导致失序
kafka.producer.retries=0 
#Producer可以将发往同一个Partition的数据做成一个Produce Request发送请求，即Batch批处理，以减少请求次数，该值即为每次批处理的大小。
kafka.producer.batch.size=4096 
#通过人工添加少量时延，而不是立马发送一个record，producer会等待所给的时延，以让其他records发送出去，这样就会被聚合在一起。这个类似于TCP的Nagle算法。该设置给了batch的时延上限：当我们获得一个partition的batch.size大小的records，就会立即发送出去，而不管该设置；但是如果对于这个partition没有累积到足够的record，会linger指定的时间等待更多的records出现。该设置的默认值为0(无时延)。例如，设置linger.ms=5，会减少request发送的数量，但是在无负载下会增加5ms的发送时延。
kafka.producer.linger=5
#如果数据产生速度大于向broker发送的速度，producer会阻塞max.block.ms，超时则抛出异常
kafka.producer.buffer.memory=40960

server.port=1110